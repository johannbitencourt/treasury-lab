{"ast":null,"code":"var _jsxFileName = \"/workspace/treasury/prototipo/src/App.js\";\nimport React from 'react';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport MenuRounded from '@material-ui/icons/MenuRounded';\nimport { Root, Header, Nav, Content, Footer, presets } from 'mui-layout';\nconst baseTheme = createMuiTheme(); // or use your own theme;\n\nconst config = presets.createStandardLayout();\n\nconst App = () => React.createElement(ThemeProvider, {\n  theme: baseTheme,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, React.createElement(Root, {\n  config: config,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, React.createElement(Header, {\n  renderMenuIcon: open => open ? React.createElement(ChevronLeft, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }) : React.createElement(MenuRounded, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, \"header\"), React.createElement(Nav, {\n  renderIcon: collapsed => collapsed ? React.createElement(ChevronRight, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }) : React.createElement(ChevronLeft, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, \"nav\"), React.createElement(Content, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, \"content\"), React.createElement(Footer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, \"footer\")));\n\nexport default App;","map":{"version":3,"sources":["/workspace/treasury/prototipo/src/App.js"],"names":["React","ThemeProvider","createMuiTheme","ChevronLeft","ChevronRight","MenuRounded","Root","Header","Nav","Content","Footer","presets","baseTheme","config","createStandardLayout","App","open","collapsed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AAEA,SACCC,IADD,EAECC,MAFD,EAGCC,GAHD,EAICC,OAJD,EAKCC,MALD,EAMCC,OAND,QAOO,YAPP;AASA,MAAMC,SAAS,GAAGV,cAAc,EAAhC,C,CAAoC;;AACpC,MAAMW,MAAM,GAAGF,OAAO,CAACG,oBAAR,EAAf;;AAEA,MAAMC,GAAG,GAAG,MACV,oBAAC,aAAD;AAAe,EAAA,KAAK,EAAEH,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC,oBAAC,IAAD;AAAM,EAAA,MAAM,EAAEC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,MAAD;AACE,EAAA,cAAc,EAAEG,IAAI,IAAKA,IAAI,GAAG,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAqB,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAME,oBAAC,GAAD;AACE,EAAA,UAAU,EAAEC,SAAS,IACnBA,SAAS,GAAG,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAsB,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SANF,EAaE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAbF,EAgBE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF,CADD,CADF;;AAyBA,eAAeF,GAAf","sourcesContent":["import React from 'react';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport MenuRounded from '@material-ui/icons/MenuRounded';\n\nimport {\n Root,\n Header,\n Nav,\n Content,\n Footer,\n presets,\n} from 'mui-layout';\n\nconst baseTheme = createMuiTheme(); // or use your own theme;\nconst config = presets.createStandardLayout();\n\nconst App = () => (\n  <ThemeProvider theme={baseTheme}>\n   <Root config={config}>\n     <Header\n       renderMenuIcon={open => (open ? <ChevronLeft /> : <MenuRounded />)}\n     >\n       header\n     </Header>\n     <Nav\n       renderIcon={collapsed =>\n         collapsed ? <ChevronRight /> : <ChevronLeft />\n       }\n     >\n       nav\n     </Nav>\n     <Content>\n       content\n     </Content>\n     <Footer>\n       footer\n     </Footer>\n   </Root>\n  </ThemeProvider>\n)\n\nexport default App;"]},"metadata":{},"sourceType":"module"}