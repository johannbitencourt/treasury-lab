{"ast":null,"code":"var _jsxFileName = \"/workspace/treasury/prototipo/src/components/Post.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link, withRouter } from 'react-router-dom';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Comment from '@material-ui/icons/Comment';\nimport Star from '@material-ui/icons/Star';\nimport ThumbUpAlt from '@material-ui/icons/ThumbUpAlt';\nimport ThumbDownAlt from '@material-ui/icons/ThumbDownAlt';\nimport Badge from '@material-ui/core/Badge';\nimport Grid from '@material-ui/core/Grid';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport BorderColor from '@material-ui/icons/BorderColor';\nimport { timestampToDate } from '../helpers/timestampToDate';\nimport { capitalize } from '../helpers/capitalize';\n\nclass Post extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      _commentCount: 0\n    };\n  }\n\n  componentWillMount() {\n    const post = this.props.post;\n    this.props.fetchCommentsCount(post.id, data => {\n      this.setState({\n        _commentCount: data.amount\n      });\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          post = _this$props.post,\n          onDeletePost = _this$props.onDeletePost,\n          commentCount = _this$props.commentCount,\n          voteForPost = _this$props.voteForPost,\n          id = _this$props.match.params.id; // const { id } = this.props.match.params;\n\n    return React.createElement(Card, {\n      className: classes.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(CardHeader, {\n      title: id ? `${post.title}` : React.createElement(Link, {\n        to: `${post.category}/${post.id}`,\n        style: {\n          textDecoration: 'none',\n          color: '#000'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, post.title),\n      subheader: `Posted by ${post.author} - ${timestampToDate(post.timestamp)}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), post.body.length > 0 && React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"p\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, `( ${capitalize(post.category)} )`), \" \", post.body)), React.createElement(CardActions, {\n      className: classes.actions,\n      disableActionSpacing: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      \"aria-label\": \"Vote Score\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Badge, {\n      badgeContent: post.voteScore,\n      color: \"primary\",\n      classes: {\n        badge: classes.badge\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Star, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }))), React.createElement(IconButton, {\n      component: Link,\n      to: `/${post.category}/${post.id}`,\n      \"aria-label\": \"Comment Count\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Badge, {\n      badgeContent: commentCount ? commentCount : this.state._commentCount,\n      color: \"primary\",\n      classes: {\n        badge: classes.badge\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Comment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))), React.createElement(IconButton, {\n      \"aria-label\": \"Up Vote\",\n      onClick: () => voteForPost(post.id, 'upVote'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(ThumbUpAlt, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(IconButton, {\n      \"aria-label\": \"Down Vote\",\n      onClick: () => voteForPost(post.id, 'downVote'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(ThumbDownAlt, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      className: classes.actionsRight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      \"aria-label\": \"Edit Post\",\n      component: Link,\n      to: `/${post.category}/edit/${post.id}`,\n      style: {\n        backgroundColor: 'transparent'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(BorderColor, {\n      className: classes.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }))), React.createElement(IconButton, {\n      \"aria-label\": \"Delete Post\",\n      onClick: () => onDeletePost(post.id, () => {\n        this.props.history.push('/');\n      }),\n      style: {\n        backgroundColor: 'transparent'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(DeleteIcon, {\n      className: classes.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nconst styles = theme => ({\n  card: {\n    maxWidth: '100%',\n    backgroundColor: '#fff7e6'\n  },\n  actions: {\n    display: 'flex'\n  },\n  actionsRight: {\n    marginLeft: 'auto'\n  },\n  icon: {\n    margin: theme.spacing.unit,\n    fontSize: 25\n  }\n});\n\nPost.propTypes = {\n  classes: PropTypes.object.isRequired,\n  post: PropTypes.object.isRequired\n};\nexport default withRouter(withStyles(styles)(Post));","map":{"version":3,"sources":["/workspace/treasury/prototipo/src/components/Post.jsx"],"names":["React","PropTypes","withStyles","Link","withRouter","Card","CardHeader","CardContent","CardActions","IconButton","Typography","Comment","Star","ThumbUpAlt","ThumbDownAlt","Badge","Grid","DeleteIcon","BorderColor","timestampToDate","capitalize","Post","Component","state","_commentCount","componentWillMount","post","props","fetchCommentsCount","id","data","setState","amount","render","classes","onDeletePost","commentCount","voteForPost","match","params","card","title","category","textDecoration","color","author","timestamp","body","length","actions","voteScore","badge","actionsRight","backgroundColor","icon","history","push","styles","theme","maxWidth","display","marginLeft","margin","spacing","unit","fontSize","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Link, withRouter } from 'react-router-dom'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\nimport IconButton from '@material-ui/core/IconButton'\nimport Typography from '@material-ui/core/Typography'\nimport Comment from '@material-ui/icons/Comment'\nimport Star from '@material-ui/icons/Star'\nimport ThumbUpAlt from '@material-ui/icons/ThumbUpAlt'\nimport ThumbDownAlt from '@material-ui/icons/ThumbDownAlt'\nimport Badge from '@material-ui/core/Badge'\nimport Grid from '@material-ui/core/Grid'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport BorderColor from '@material-ui/icons/BorderColor'\n\nimport { timestampToDate } from '../helpers/timestampToDate'\nimport { capitalize }  from '../helpers/capitalize'\n\nclass Post extends React.Component {\n\n  state = { _commentCount: 0 }\n\n  componentWillMount() {\n    const { post } = this.props;\n    this.props.fetchCommentsCount(post.id, (data) => { this.setState({ _commentCount: data.amount }); });\n  }\n\n  render() {\n    const { classes, post, onDeletePost, commentCount, voteForPost,\n      match: { params: { id } } } = this.props;\n    // const { id } = this.props.match.params;\n\n    return (\n      <Card className={classes.card}>\n        <CardHeader\n          title={id ? `${post.title}` : <Link to={`${post.category}/${post.id}`} style={{ textDecoration: 'none', color: '#000' }}>{post.title}</Link>}\n          subheader={`Posted by ${post.author} - ${timestampToDate(post.timestamp)}`}\n        />\n\n        { post.body.length > 0 &&(\n          <CardContent>\n            <Typography component=\"p\">\n              <b>{`( ${capitalize(post.category)} )`}</b> {post.body}\n            </Typography>\n          </CardContent>\n        )}\n\n        <CardActions className={classes.actions} disableActionSpacing>\n          <IconButton aria-label=\"Vote Score\">\n            <Badge badgeContent={post.voteScore} color=\"primary\" classes={{ badge: classes.badge }}>\n              <Star />\n            </Badge>\n          </IconButton>\n\n          <IconButton\n            component={Link} to={`/${post.category}/${post.id}`}\n            aria-label=\"Comment Count\">\n            <Badge badgeContent={commentCount ? commentCount : this.state._commentCount} color=\"primary\" classes={{ badge: classes.badge }}>\n              <Comment />\n            </Badge>\n          </IconButton>\n\n          <IconButton aria-label=\"Up Vote\" onClick={() => voteForPost(post.id, 'upVote') }>\n            <ThumbUpAlt />\n          </IconButton>\n\n          <IconButton aria-label=\"Down Vote\" onClick={() => voteForPost(post.id, 'downVote')}>\n            <ThumbDownAlt />\n          </IconButton>\n\n          {/* editButtons */}\n          <Grid className={classes.actionsRight}>\n            <IconButton\n              aria-label=\"Edit Post\"\n              component={Link} to={`/${post.category}/edit/${post.id}`}\n              style={{ backgroundColor: 'transparent' }}\n            >\n                <Grid item xs={8}>\n                  <BorderColor className={classes.icon} />\n                </Grid>\n            </IconButton>\n\n            <IconButton\n              aria-label=\"Delete Post\"\n              onClick={() =>\n                onDeletePost(post.id, () => { this.props.history.push('/') } )}\n              style={{ backgroundColor: 'transparent' }}\n            >\n                <Grid item xs={8}>\n                  <DeleteIcon className={classes.icon} />\n                </Grid>\n            </IconButton>\n          </Grid>\n        </CardActions>\n\n      </Card>\n    );\n  }\n}\n\nconst styles = theme => ({\n  card: {\n    maxWidth: '100%',\n    backgroundColor: '#fff7e6'\n  },\n  actions: {\n    display: 'flex',\n  },\n  actionsRight: {\n    marginLeft: 'auto',\n  },\n  icon: {\n    margin: theme.spacing.unit,\n    fontSize: 25,\n  },\n});\n\nPost.propTypes = {\n  classes: PropTypes.object.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nexport default withRouter(withStyles(styles)(Post));"]},"metadata":{},"sourceType":"module"}